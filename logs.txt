TotalWidth calculé: {measuresCount: 9, lastMeasureEnd: '16.560s', lastMeasureStart: '3600px', lastMeasureWidth: '480px', newWidth: '4080px', …}
playbackCursor.js:114 🎯 Seek: 16.574447s → 4083.5px {storeTotalWidth: 4080, pixelPos: '4083.5', tempsOriginal: '16.574447s', durée: '16.560061s', limité: '⚠️ NON LIMITÉ', …}
playbackCursor.js:77 🏁 STORE: Fin de morceau - arrêt sans reset à 16.57s
useMidiPlayer.js:604 🏁 Fin de morceau - position gardée à 16.57s
playbackCursor.js:332 📍 Curseur: 4083.5px (16.57s)
ScrollController.vue:69 📍 ScrollController: Auto-scroll ignoré (mouvement mineur)
usePlaybackCursor.js:334 🔗 Sync curseur avec lecteur: 16.57s 
TransportControls.vue:164 🎵 MidiPlayer.isPlaying changé: false stoppedAtEnd: true
TransportControls.vue:173 🏁 TransportControls: Arrêt de fin de morceau - pas de reset du curseur
usePlaybackCursor.js:371 🔓 Désynchronisation du lecteur
usePlaybackCursor.js:381 🎵 getTempoAtTime appelé: {time: '16.57s', tempoEventsCount: 35, tempoEvents: Array(3)}
usePlaybackCursor.js:406 🎵 Tempo trouvé: 100 BPM à 11.687561287499996s
playbackCursor.js:87 ⚠️ POSITION CHANGÉE APRÈS stopAtEnd! {avant: '16.56s', après: '16.57s'}
(anonymous) @ playbackCursor.js:87
setTimeout
stopAtEnd @ playbackCursor.js:85
(anonymous) @ playbackCursor.js:293
setInterval
startTimer @ playbackCursor.js:273
startPlayback @ playbackCursor.js:49
wrappedAction @ pinia.js?v=6d1944fa:1248
store.<computed> @ pinia.js?v=6d1944fa:926
play @ useMidiPlayer.js:318
handlePlayPause @ TransportControls.vue:351
callWithErrorHandling @ chunk-DBOTBDL2.js?v=6d1944fa:2289
callWithAsyncErrorHandling @ chunk-DBOTBDL2.js?v=6d1944fa:2296
emit @ chunk-DBOTBDL2.js?v=6d1944fa:8556
(anonymous) @ chunk-DBOTBDL2.js?v=6d1944fa:10266
handleClick @ element-plus.js?v=6d1944fa:15740
callWithErrorHandling @ chunk-DBOTBDL2.js?v=6d1944fa:2289
callWithAsyncErrorHandling @ chunk-DBOTBDL2.js?v=6d1944fa:2296
invoker @ chunk-DBOTBDL2.js?v=6d1944fa:11296
playbackCursor.js:92 ✅ Position maintenue après stopAtEnd: 16.57s